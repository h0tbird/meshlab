---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: otelco-cluster
  namespace: argocd
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          argocd.argoproj.io/secret-type: cluster
  template:
    metadata:
      name: {{`'{{name}}-otelco-cluster'`}}
      labels:
        name: otelco-cluster
    spec:
      project: monitoring
      source:
        repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
        targetRevision: {{ .Values.chartVersion }}
        chart: opentelemetry-collector
        helm:
          releaseName: otelco-cluster
          values: |
            image:
              repository: otel/opentelemetry-collector-contrib
            mode: deployment
            presets:
              clusterMetrics: # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/k8sclusterreceiver/documentation.md
                enabled: true
            config:
              receivers:
                jaeger: null
                zipkin: null
                prometheus:
                  config:
                    scrape_configs:
                      - job_name: istiod
                        kubernetes_sd_configs:
                          - role: pod
                            namespaces:
                              names:
                                - istio-system
                        relabel_configs:
                          - source_labels: [__meta_kubernetes_pod_label_app]
                            regex: istiod
                            action: keep
                          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                            regex: "true"
                            action: keep
                          - source_labels: [__meta_kubernetes_pod_ip]
                            target_label: __address__
                            replacement: $1:15014
              processors:
                resource:
                  attributes:
                    - key: k8s.cluster.name
                      value: {{`'{{name}}'`}}
                      action: upsert
              exporters:
                prometheusremotewrite:
                  endpoint: http://prometheus.demo.lab/api/v1/write
                  resource_to_telemetry_conversion:
                    enabled: true
                  tls:
                    insecure: true
                debug:
                  verbosity: detailed
              service:
                pipelines:
                  traces: null
                  logs: null
                  metrics:
                    receivers: [k8s_cluster, prometheus]
                    processors: [resource, batch]
                    exporters: [prometheusremotewrite, debug]
            ports:
              jaeger-compact:
                enabled: false
              jaeger-thrift:
                enabled: false
              jaeger-grpc:
                enabled: false
              zipkin:
                enabled: false
      destination:
        server: {{`'{{server}}'`}}
        namespace: monitoring
